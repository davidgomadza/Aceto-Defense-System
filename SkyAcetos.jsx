Action: {"tool_name": "mcp_bulk_file_writer", "tool_arguments": {"files": [{"path": "/app/frontend/src/index.css", "content": "@import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;500;600;700&family=Azeret+Mono:wght@400;500;600&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* Dark Space Base */\n  --background: 218 25% 6%;\n  --foreground: 210 20% 95%;\n  \n  /* Ice Blue Primary - Nitrogen Theme */\n  --primary: 195 85% 65%;\n  --primary-foreground: 218 25% 10%;\n  --primary-glow: 195 90% 75%;\n  \n  /* Neon Accent - Cyan */\n  --accent: 180 100% 50%;\n  --accent-foreground: 218 25% 10%;\n  --accent-glow: 180 100% 60%;\n  \n  /* Secondary - Deep Space Blue */\n  --secondary: 235 50% 25%;\n  --secondary-foreground: 210 20% 95%;\n  \n  /* Muted - Dark UI Elements */\n  --muted: 218 20% 15%;\n  --muted-foreground: 210 15% 60%;\n  \n  /* Card & Popover */\n  --card: 218 25% 8%;\n  --card-foreground: 210 20% 95%;\n  --popover: 218 25% 10%;\n  --popover-foreground: 210 20% 95%;\n  \n  /* Border & Input */\n  --border: 195 40% 25%;\n  --input: 195 40% 25%;\n  --ring: 195 85% 65%;\n  \n  /* Destructive */\n  --destructive: 0 72% 51%;\n  --destructive-foreground: 0 0% 98%;\n  \n  /* Success */\n  --success: 142 76% 36%;\n  --success-foreground: 0 0% 98%;\n  \n  /* Warning */\n  --warning: 38 92% 50%;\n  --warning-foreground: 0 0% 98%;\n  \n  /* Radius */\n  --radius: 0.5rem;\n  \n  /* Gradients */\n  --gradient-space: linear-gradient(135deg, hsl(218 25% 6%), hsl(235 40% 12%), hsl(218 25% 6%));\n  --gradient-ice: linear-gradient(135deg, hsl(195 85% 65%), hsl(195 75% 55%));\n  --gradient-neon: linear-gradient(90deg, hsl(180 100% 50%), hsl(195 85% 65%));\n  --gradient-glow: radial-gradient(circle at center, hsl(195 85% 65% / 0.3), transparent 70%);\n  \n  /* Shadows */\n  --shadow-glow: 0 0 30px hsl(195 85% 65% / 0.5), 0 0 60px hsl(195 85% 65% / 0.3);\n  --shadow-neon: 0 0 20px hsl(180 100% 50% / 0.6), 0 0 40px hsl(180 100% 50% / 0.3);\n  --shadow-card: 0 4px 20px hsl(218 25% 6% / 0.5);\n  \n  /* Animations */\n  --transition-smooth: 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-bounce: 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  \n  body {\n    @apply bg-background text-foreground;\n    font-family: 'Space Grotesk', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    overflow-x: hidden;\n  }\n  \n  code {\n    font-family: 'Azeret Mono', source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n  }\n  \n  [data-debug-wrapper=\"true\"] {\n    display: contents !important;\n  }\n  \n  [data-debug-wrapper=\"true\"] > * {\n    margin-left: inherit;\n    margin-right: inherit;\n    margin-top: inherit;\n    margin-bottom: inherit;\n    padding-left: inherit;\n    padding-right: inherit;\n    padding-top: inherit;\n    padding-bottom: inherit;\n    column-gap: inherit;\n    row-gap: inherit;\n    gap: inherit;\n    border-left-width: inherit;\n    border-right-width: inherit;\n    border-top-width: inherit;\n    border-bottom-width: inherit;\n  }\n}\n\n@layer components {\n  .glow-text {\n    text-shadow: 0 0 10px hsl(var(--primary-glow)), 0 0 20px hsl(var(--primary-glow) / 0.5);\n  }\n  \n  .neon-text {\n    text-shadow: 0 0 10px hsl(var(--accent)), 0 0 20px hsl(var(--accent) / 0.5), 0 0 30px hsl(var(--accent) / 0.3);\n  }\n  \n  .neon-border {\n    border: 1px solid hsl(var(--accent) / 0.5);\n    box-shadow: 0 0 10px hsl(var(--accent) / 0.3), inset 0 0 10px hsl(var(--accent) / 0.1);\n  }\n  \n  .glass-panel {\n    background: hsl(var(--card) / 0.6);\n    backdrop-filter: blur(10px);\n    border: 1px solid hsl(var(--border) / 0.3);\n    box-shadow: var(--shadow-card);\n  }\n  \n  .planet-glow {\n    filter: drop-shadow(0 0 20px hsl(var(--primary)));\n  }\n}\n\n@layer utilities {\n  .text-gradient-ice {\n    background: var(--gradient-ice);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n  \n  .text-gradient-neon {\n    background: var(--gradient-neon);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n  \n  .animate-pulse-glow {\n    animation: pulse-glow 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  }\n  \n  .animate-spin-slow {\n    animation: spin 20s linear infinite;\n  }\n  \n  .animate-orbit {\n    animation: orbit 30s linear infinite;\n  }\n}\n\n@keyframes pulse-glow {\n  0%, 100% {\n    opacity: 1;\n    filter: drop-shadow(0 0 20px hsl(var(--primary)));\n  }\n  50% {\n    opacity: 0.7;\n    filter: drop-shadow(0 0 40px hsl(var(--primary)));\n  }\n}\n\n@keyframes orbit {\n  from {\n    transform: rotate(0deg) translateX(200px) rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg) translateX(200px) rotate(-360deg);\n  }\n}\n\n/* Scrollbar Styling */\n::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: hsl(var(--muted));\n}\n\n::-webkit-scrollbar-thumb {\n  background: hsl(var(--primary) / 0.5);\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: hsl(var(--primary));\n}"}, {"path": "/app/frontend/tailwind.config.js", "content": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: ['class'],\n  content: [\n    './src/**/*.{js,jsx,ts,tsx}',\n    './public/index.html'\n  ],\n  theme: {\n    container: {\n      center: true,\n      padding: '2rem',\n      screens: {\n        '2xl': '1400px',\n      },\n    },\n    extend: {\n      colors: {\n        border: 'hsl(var(--border))',\n        input: 'hsl(var(--input))',\n        ring: 'hsl(var(--ring))',\n        background: 'hsl(var(--background))',\n        foreground: 'hsl(var(--foreground))',\n        primary: {\n          DEFAULT: 'hsl(var(--primary))',\n          foreground: 'hsl(var(--primary-foreground))',\n          glow: 'hsl(var(--primary-glow))',\n        },\n        secondary: {\n          DEFAULT: 'hsl(var(--secondary))',\n          foreground: 'hsl(var(--secondary-foreground))',\n        },\n        destructive: {\n          DEFAULT: 'hsl(var(--destructive))',\n          foreground: 'hsl(var(--destructive-foreground))',\n        },\n        success: {\n          DEFAULT: 'hsl(var(--success))',\n          foreground: 'hsl(var(--success-foreground))',\n        },\n        warning: {\n          DEFAULT: 'hsl(var(--warning))',\n          foreground: 'hsl(var(--warning-foreground))',\n        },\n        muted: {\n          DEFAULT: 'hsl(var(--muted))',\n          foreground: 'hsl(var(--muted-foreground))',\n        },\n        accent: {\n          DEFAULT: 'hsl(var(--accent))',\n          foreground: 'hsl(var(--accent-foreground))',\n          glow: 'hsl(var(--accent-glow))',\n        },\n        popover: {\n          DEFAULT: 'hsl(var(--popover))',\n          foreground: 'hsl(var(--popover-foreground))',\n        },\n        card: {\n          DEFAULT: 'hsl(var(--card))',\n          foreground: 'hsl(var(--card-foreground))',\n        },\n      },\n      borderRadius: {\n        lg: 'var(--radius)',\n        md: 'calc(var(--radius) - 2px)',\n        sm: 'calc(var(--radius) - 4px)',\n      },\n      fontFamily: {\n        sans: ['Space Grotesk', 'sans-serif'],\n        mono: ['Azeret Mono', 'monospace'],\n      },\n      animation: {\n        'spin-slow': 'spin 20s linear infinite',\n        'pulse-glow': 'pulse-glow 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',\n        'orbit': 'orbit 30s linear infinite',\n      },\n      boxShadow: {\n        glow: 'var(--shadow-glow)',\n        neon: 'var(--shadow-neon)',\n        card: 'var(--shadow-card)',\n      },\n    },\n  },\n  plugins: [],\n};"}, {"path": "/app/frontend/src/App.js", "content": "import { Toaster } from './components/ui/sonner';\nimport DefenseSystem from './pages/DefenseSystem';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App min-h-screen bg-background\">\n      <DefenseSystem />\n      <Toaster position=\"top-right\" richColors />\n    </div>\n  );\n}\n\nexport default App;"}, {"path": "/app/frontend/src/components/ui/sonner.jsx", "content": "import { Toaster as Sonner } from 'sonner';\n\nexport const Toaster = ({\n  ...props\n}) => {\n  return (\n    <Sonner\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            'group toast group-[.toaster]:bg-card group-[.toaster]:text-card-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg',\n          description: 'group-[.toast]:text-muted-foreground',\n          actionButton:\n            'group-[.toast]:bg-primary group-[.toast]:text-primary-foreground',\n          cancelButton:\n            'group-[.toast]:bg-muted group-[.toast]:text-muted-foreground',\n        },\n      }}\n      {...props}\n    />\n  );\n};"}, {"path": "/app/frontend/src/components/ui/button.jsx", "content": "import * as React from 'react';\nimport { cva } from 'class-variance-authority';\nimport { cn } from '../../lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default:\n          'bg-primary text-primary-foreground shadow-glow hover:opacity-90',\n        destructive:\n          'bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',\n        outline:\n          'border border-primary/50 bg-transparent text-primary hover:bg-primary/10 hover:shadow-glow',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent/10 hover:text-accent',\n        link: 'text-primary underline-offset-4 hover:underline',\n        neon: 'bg-accent text-accent-foreground shadow-neon hover:opacity-90 hover:shadow-neon',\n        glass: 'glass-panel text-foreground hover:bg-card/80',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-8 rounded-md px-3 text-xs',\n        lg: 'h-12 rounded-md px-8 text-base',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n\nexport const Button = React.forwardRef(\n  ({ className, variant, size, ...props }, ref) => {\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nButton.displayName = 'Button';"}, {"path": "/app/frontend/src/components/ui/card.jsx", "content": "import * as React from 'react';\nimport { cn } from '../../lib/utils';\n\nexport const Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('glass-panel rounded-lg p-6', className)}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nexport const CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 pb-4', className)}\n    {...props}\n  />\n));\nCardHeader.displayName = 'CardHeader';\n\nexport const CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn('text-xl font-semibold leading-none tracking-tight text-foreground', className)}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nexport const CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nexport const CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nexport const CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center pt-4', className)}\n    {...props}\n  />\n));\nCardFooter.displayName = 'CardFooter';"}, {"path": "/app/frontend/src/components/ui/badge.jsx", "content": "import * as React from 'react';\nimport { cva } from 'class-variance-authority';\nimport { cn } from '../../lib/utils';\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-all focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-transparent bg-primary text-primary-foreground shadow-glow',\n        secondary:\n          'border-transparent bg-secondary text-secondary-foreground',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground',\n        success:\n          'border-transparent bg-success text-success-foreground',\n        outline: 'text-foreground border-border',\n        neon: 'border-accent bg-accent/10 text-accent shadow-neon',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nexport const Badge = ({ className, variant, ...props }) => {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n};"}, {"path": "/app/frontend/src/components/ui/slider.jsx", "content": "import * as React from 'react';\nimport { cn } from '../../lib/utils';\n\nexport const Slider = React.forwardRef(\n  ({ className, min = 0, max = 100, step = 1, value = 50, onChange, ...props }, ref) => {\n    return (\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={onChange}\n        className={cn(\n          'w-full h-2 bg-muted rounded-lg appearance-none cursor-pointer accent-primary',\n          '[&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:w-4 [&::-webkit-slider-thumb]:h-4 [&::-webkit-slider-thumb]:rounded-full [&::-webkit-slider-thumb]:bg-primary [&::-webkit-slider-thumb]:shadow-glow',\n          '[&::-moz-range-thumb]:w-4 [&::-moz-range-thumb]:h-4 [&::-moz-range-thumb]:rounded-full [&::-moz-range-thumb]:bg-primary [&::-moz-range-thumb]:border-0',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nSlider.displayName = 'Slider';"}, {"path": "/app/frontend/src/lib/utils.js", "content": "import { clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}"}, {"path": "/app/frontend/src/pages/DefenseSystem.jsx", "content": "import React, { useState, useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, Stars } from '@react-three/drei';\nimport { motion } from 'framer-motion';\nimport ControlPanel from '../components/defense/ControlPanel';\nimport SystemStats from '../components/defense/SystemStats';\nimport Scene3D from '../components/defense/Scene3D';\nimport Header from '../components/defense/Header';\nimport { toast } from 'sonner';\n\nconst DefenseSystem = () => {\n  const [systemActive, setSystemActive] = useState(false);\n  const [enemyDetected, setEnemyDetected] = useState(false);\n  const [rotationAngle, setRotationAngle] = useState(33);\n  const [disposalAngle, setDisposalAngle] = useState(333);\n  const [rotationSpeed, setRotationSpeed] = useState(1);\n  const [stats, setStats] = useState({\n    acetoCount: 252,\n    activeDefense: 12,\n    enemiesDisposed: 0,\n    systemHealth: 100\n  });\n\n  const handleSystemToggle = () => {\n    setSystemActive(!systemActive);\n    toast.success(\n      systemActive ? 'Defense System Deactivated' : 'Defense System Activated',\n      {\n        description: systemActive\n          ? 'All Aceto units returning to standby'\n          : 'Aceto Defense Grid Online'\n      }\n    );\n  };\n\n  const handleEnemyDetection = () => {\n    if (!systemActive) {\n      toast.error('System Inactive', {\n        description: 'Activate defense system first'\n      });\n      return;\n    }\n\n    setEnemyDetected(true);\n    toast.warning('Enemy Detected!', {\n      description: 'Initiating triangular formation protocol'\n    });\n\n    // Simulate enemy disposal sequence\n    setTimeout(() => {\n      setStats(prev => ({\n        ...prev,\n        enemiesDisposed: prev.enemiesDisposed + 1\n      }));\n      toast.success('Enemy Disposed', {\n        description: `Ejected to Planetbin at ${disposalAngle}\u00b0 trajectory`\n      });\n      setEnemyDetected(false);\n    }, 3000);\n  };\n\n  const handleResetSystem = () => {\n    setSystemActive(false);\n    setEnemyDetected(false);\n    setRotationAngle(33);\n    setDisposalAngle(333);\n    setRotationSpeed(1);\n    setStats({\n      acetoCount: 252,\n      activeDefense: 12,\n      enemiesDisposed: 0,\n      systemHealth: 100\n    });\n    toast.info('System Reset', {\n      description: 'All parameters restored to default'\n    });\n  };\n\n  useEffect(() => {\n    if (systemActive) {\n      setStats(prev => ({ ...prev, activeDefense: 12 }));\n    } else {\n      setStats(prev => ({ ...prev, activeDefense: 0 }));\n    }\n  }, [systemActive]);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-background via-background to-secondary/20 relative overflow-hidden\">\n      {/* Background Effects */}\n      <div className=\"absolute inset-0 bg-[radial-gradient(ellipse_at_top,_var(--tw-gradient-stops))] from-primary/5 via-transparent to-transparent\" />\n      <div className=\"absolute inset-0 bg-[radial-gradient(ellipse_at_bottom,_var(--tw-gradient-stops))] from-accent/5 via-transparent to-transparent\" />\n\n      <Header />\n\n      <div className=\"container mx-auto px-4 py-8 relative z-10\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\"\n        >\n          {/* Stats Panel */}\n          <div className=\"lg:col-span-3\">\n            <SystemStats stats={stats} systemActive={systemActive} />\n          </div>\n\n          {/* 3D Visualization */}\n          <div className=\"lg:col-span-6\">\n            <motion.div\n              className=\"glass-panel rounded-2xl overflow-hidden\"\n              style={{ height: '600px' }}\n              initial={{ opacity: 0, scale: 0.95 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n            >\n              <Canvas\n                camera={{ position: [0, 50, 100], fov: 60 }}\n                gl={{ antialias: true, alpha: true }}\n              >\n                <Scene3D\n                  systemActive={systemActive}\n                  enemyDetected={enemyDetected}\n                  rotationAngle={rotationAngle}\n                  rotationSpeed={rotationSpeed}\n                  disposalAngle={disposalAngle}\n                />\n                <OrbitControls\n                  enableZoom={true}\n                  enablePan={true}\n                  enableRotate={true}\n                  maxDistance={200}\n                  minDistance={30}\n                />\n                <Stars\n                  radius={300}\n                  depth={50}\n                  count={5000}\n                  factor={4}\n                  saturation={0}\n                  fade\n                  speed={1}\n                />\n              </Canvas>\n            </motion.div>\n          </div>\n\n          {/* Control Panel */}\n          <div className=\"lg:col-span-3\">\n            <ControlPanel\n              systemActive={systemActive}\n              enemyDetected={enemyDetected}\n              rotationAngle={rotationAngle}\n              disposalAngle={disposalAngle}\n              rotationSpeed={rotationSpeed}\n              onSystemToggle={handleSystemToggle}\n              onEnemyDetection={handleEnemyDetection}\n              onResetSystem={handleResetSystem}\n              onRotationAngleChange={setRotationAngle}\n              onDisposalAngleChange={setDisposalAngle}\n              onRotationSpeedChange={setRotationSpeed}\n            />\n          </div>\n        </motion.div>\n\n        {/* Info Section */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.4 }}\n          className=\"mt-8 glass-panel rounded-2xl p-6\"\n        >\n          <h3 className=\"text-lg font-semibold text-foreground mb-3\">System Overview</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-muted-foreground\">\n            <div>\n              <h4 className=\"text-primary font-medium mb-2\">Aceto Specifications</h4>\n              <ul className=\"space-y-1\">\n                <li>\u2022 Composition: 98% Nitrogen Ice</li>\n                <li>\u2022 Mass: 1.27 \u00d7 10\u00b2\u00b2 kg</li>\n                <li>\u2022 Radius: 1,137 km</li>\n                <li>\u2022 Surface Gravity: 0.4 m/s\u00b2</li>\n                <li>\u2022 Temperature: -360\u00b0F to -400\u00b0F</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"text-primary font-medium mb-2\">Defense Configuration</h4>\n              <ul className=\"space-y-1\">\n                <li>\u2022 12 Orbital Acetos (24hr clock)</li>\n                <li>\u2022 252 Sky Acetos (3 \u00d7 84 units)</li>\n                <li>\u2022 Vertical Cooking-Plate Defense</li>\n                <li>\u2022 Triangular Formation Attack</li>\n                <li>\u2022 Planetbin Disposal System</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"text-primary font-medium mb-2\">Operational Parameters</h4>\n              <ul className=\"space-y-1\">\n                <li>\u2022 Rotation Angle: Adjustable (33\u00b0-360\u00b0)</li>\n                <li>\u2022 Disposal Angle: 333\u00b0 (to Planetbin)</li>\n                <li>\u2022 Distance to Planetbin: 3,333 km</li>\n                <li>\u2022 Direction: 28\u00b0 Northeast from Earth</li>\n                <li>\u2022 Lift Height: 4 meters</li>\n              </ul>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default DefenseSystem;"}, {"path": "/app/frontend/src/components/defense/Header.jsx", "content": "import React from 'react';\nimport { Shield, Orbit } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\nexport const Header = () => {\n  return (\n    <motion.header\n      initial={{ opacity: 0, y: -20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"border-b border-border/50 bg-card/30 backdrop-blur-md\"\n    >\n      <div className=\"container mx-auto px-4 py-6\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-4\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 bg-primary/20 blur-xl rounded-full\" />\n              <Shield className=\"w-10 h-10 text-primary relative z-10 planet-glow\" />\n            </div>\n            <div>\n              <h1 className=\"text-3xl font-bold text-foreground glow-text\">\n                Aceto Defense System\n              </h1>\n              <p className=\"text-sm text-muted-foreground font-mono mt-1\">\n                Planetary Protection Grid \u2022 24-Hour Clock Formation\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Orbit className=\"w-5 h-5 text-accent animate-spin-slow\" />\n            <span className=\"text-xs text-muted-foreground font-mono\">\n              System Online\n            </span>\n          </div>\n        </div>\n      </div>\n    </motion.header>\n  );\n};\n\nexport default Header;"}, {"path": "/app/frontend/src/components/defense/SystemStats.jsx", "content": "import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\nimport { Badge } from '../ui/badge';\nimport { Activity, Shield, Target, Heart } from 'lucide-react';\n\nexport const SystemStats = ({ stats, systemActive }) => {\n  const statItems = [\n    {\n      icon: Shield,\n      label: 'Aceto Units',\n      value: stats.acetoCount,\n      color: 'text-primary',\n      bgColor: 'bg-primary/10'\n    },\n    {\n      icon: Activity,\n      label: 'Active Defense',\n      value: stats.activeDefense,\n      color: 'text-accent',\n      bgColor: 'bg-accent/10'\n    },\n    {\n      icon: Target,\n      label: 'Enemies Disposed',\n      value: stats.enemiesDisposed,\n      color: 'text-success',\n      bgColor: 'bg-success/10'\n    },\n    {\n      icon: Heart,\n      label: 'System Health',\n      value: `${stats.systemHealth}%`,\n      color: 'text-primary',\n      bgColor: 'bg-primary/10'\n    }\n  ];\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, x: -20 }}\n      animate={{ opacity: 1, x: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"space-y-4\"\n    >\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle className=\"text-lg\">System Status</CardTitle>\n            <Badge variant={systemActive ? 'neon' : 'outline'}>\n              {systemActive ? 'ACTIVE' : 'STANDBY'}\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {statItems.map((item, index) => (\n            <motion.div\n              key={item.label}\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3, delay: index * 0.1 }}\n              className=\"flex items-center justify-between p-3 rounded-lg bg-muted/30 hover:bg-muted/50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <div className={`p-2 rounded-lg ${item.bgColor}`}>\n                  <item.icon className={`w-4 h-4 ${item.color}`} />\n                </div>\n                <div>\n                  <p className=\"text-xs text-muted-foreground\">{item.label}</p>\n                  <p className={`text-lg font-semibold ${item.color}`}>\n                    {item.value}\n                  </p>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Active Protocols</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-2\">\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-muted-foreground\">Orbital Defense</span>\n            <Badge variant={systemActive ? 'success' : 'outline'} className=\"text-xs\">\n              {systemActive ? 'Online' : 'Offline'}\n            </Badge>\n          </div>\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-muted-foreground\">Sky Formation</span>\n            <Badge variant={systemActive ? 'success' : 'outline'} className=\"text-xs\">\n              {systemActive ? 'Online' : 'Offline'}\n            </Badge>\n          </div>\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-muted-foreground\">Vertical Defense</span>\n            <Badge variant={systemActive ? 'success' : 'outline'} className=\"text-xs\">\n              {systemActive ? 'Online' : 'Offline'}\n            </Badge>\n          </div>\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-muted-foreground\">Planetbin Link</span>\n            <Badge variant=\"success\" className=\"text-xs\">\n              Active\n            </Badge>\n          </div>\n        </CardContent>\n      </Card>\n    </motion.div>\n  );\n};\n\nexport default SystemStats;"}, {"path": "/app/frontend/src/components/defense/ControlPanel.jsx", "content": "import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\nimport { Button } from '../ui/button';\nimport { Slider } from '../ui/slider';\nimport { Power, AlertTriangle, RotateCcw, Gauge } from 'lucide-react';\n\nexport const ControlPanel = ({\n  systemActive,\n  enemyDetected,\n  rotationAngle,\n  disposalAngle,\n  rotationSpeed,\n  onSystemToggle,\n  onEnemyDetection,\n  onResetSystem,\n  onRotationAngleChange,\n  onDisposalAngleChange,\n  onRotationSpeedChange\n}) => {\n  return (\n    <motion.div\n      initial={{ opacity: 0, x: 20 }}\n      animate={{ opacity: 1, x: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"space-y-4\"\n    >\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">System Controls</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <Button\n            variant={systemActive ? 'destructive' : 'neon'}\n            size=\"lg\"\n            className=\"w-full\"\n            onClick={onSystemToggle}\n          >\n            <Power className=\"w-4 h-4\" />\n            {systemActive ? 'Deactivate System' : 'Activate System'}\n          </Button>\n\n          <Button\n            variant=\"outline\"\n            size=\"lg\"\n            className=\"w-full\"\n            onClick={onEnemyDetection}\n            disabled={!systemActive || enemyDetected}\n          >\n            <AlertTriangle className=\"w-4 h-4\" />\n            {enemyDetected ? 'Engaging Target...' : 'Simulate Enemy Detection'}\n          </Button>\n\n          <Button\n            variant=\"ghost\"\n            size=\"lg\"\n            className=\"w-full\"\n            onClick={onResetSystem}\n          >\n            <RotateCcw className=\"w-4 h-4\" />\n            Reset System\n          </Button>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Configuration</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <label className=\"text-sm text-muted-foreground\">Rotation Angle</label>\n              <span className=\"text-sm font-mono text-primary font-semibold\">{rotationAngle}\u00b0</span>\n            </div>\n            <Slider\n              min={0}\n              max={360}\n              step={1}\n              value={rotationAngle}\n              onChange={(e) => onRotationAngleChange(Number(e.target.value))}\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <label className=\"text-sm text-muted-foreground\">Disposal Angle</label>\n              <span className=\"text-sm font-mono text-accent font-semibold\">{disposalAngle}\u00b0</span>\n            </div>\n            <Slider\n              min={0}\n              max={360}\n              step={1}\n              value={disposalAngle}\n              onChange={(e) => onDisposalAngleChange(Number(e.target.value))}\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <label className=\"text-sm text-muted-foreground flex items-center gap-2\">\n                <Gauge className=\"w-3 h-3\" />\n                Rotation Speed\n              </label>\n              <span className=\"text-sm font-mono text-foreground font-semibold\">{rotationSpeed.toFixed(1)}x</span>\n            </div>\n            <Slider\n              min={0.1}\n              max={5}\n              step={0.1}\n              value={rotationSpeed}\n              onChange={(e) => onRotationSpeedChange(Number(e.target.value))}\n            />\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-sm\">System Information</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-2 text-xs text-muted-foreground font-mono\">\n          <div className=\"flex justify-between\">\n            <span>Planetbin Distance:</span>\n            <span className=\"text-foreground\">3,333 km</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span>Direction from Earth:</span>\n            <span className=\"text-foreground\">28\u00b0 NE</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span>Lift Height:</span>\n            <span className=\"text-foreground\">4 meters</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span>Formation Type:</span>\n            <span className=\"text-foreground\">Triangular</span>\n          </div>\n        </CardContent>\n      </Card>\n    </motion.div>\n  );\n};\n\nexport default ControlPanel;"}, {"path": "/app/frontend/src/components/defense/Scene3D.jsx", "content": "import React, { useRef, useMemo } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport CentralClock from './3d/CentralClock';\nimport OrbitalAcetos from './3d/OrbitalAcetos';\nimport SkyAcetos from './3d/SkyAcetos';\nimport CookingPlate from './3d/CookingPlate';\nimport Enemy from './3d/Enemy';\n\nexport const Scene3D = ({\n  systemActive,\n  enemyDetected,\n  rotationAngle,\n  rotationSpeed,\n  disposalAngle\n}) => {\n  return (\n    <>\n      {/* Ambient lighting */}\n      <ambientLight intensity={0.3} />\n      <pointLight position={[0, 50, 0]} intensity={1} color=\"#7dd3fc\" />\n      <pointLight position={[50, 0, 50]} intensity={0.5} color=\"#00ffff\" />\n\n      {/* Central Clock on the ground */}\n      <CentralClock systemActive={systemActive} />\n\n      {/* 12 Orbital Acetos around the clock */}\n      <OrbitalAcetos\n        systemActive={systemActive}\n        rotationSpeed={rotationSpeed}\n      />\n\n      {/* 3 sets of 84 Sky Acetos */}\n      <SkyAcetos\n        systemActive={systemActive}\n        enemyDetected={enemyDetected}\n        rotationSpeed={rotationSpeed}\n      />\n\n      {/* Vertical Cooking Plate */}\n      <CookingPlate\n        systemActive={systemActive}\n        rotationAngle={rotationAngle}\n        rotationSpeed={rotationSpeed}\n        disposalAngle={disposalAngle}\n      />\n\n      {/* Enemy (when detected) */}\n      {enemyDetected && (\n        <Enemy disposalAngle={disposalAngle} />\n      )}\n\n      {/* Ground plane for reference */}\n      <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -1, 0]} receiveShadow>\n        <planeGeometry args={[200, 200]} />\n        <meshStandardMaterial\n          color=\"#0a0e1a\"\n          transparent\n          opacity={0.3}\n          side={THREE.DoubleSide}\n        />\n      </mesh>\n    </>\n  );\n};\n\nexport default Scene3D;"}, {"path": "/app/frontend/src/components/defense/3d/CentralClock.jsx", "content": "import React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { Text } from '@react-three/drei';\n\nexport const CentralClock = ({ systemActive }) => {\n  const clockRef = useRef();\n  const hourHandRef = useRef();\n  const minuteHandRef = useRef();\n\n  useFrame(({ clock }) => {\n    if (systemActive && clockRef.current) {\n      const time = clock.getElapsedTime();\n      // Rotate hour markers slowly\n      clockRef.current.rotation.y = time * 0.05;\n\n      // Animate clock hands\n      if (hourHandRef.current) {\n        hourHandRef.current.rotation.z = -time * 0.1;\n      }\n      if (minuteHandRef.current) {\n        minuteHandRef.current.rotation.z = -time * 0.5;\n      }\n    }\n  });\n\n  // Create hour markers\n  const hourMarkers = [];\n  for (let i = 0; i < 12; i++) {\n    const angle = (i / 12) * Math.PI * 2;\n    const x = Math.cos(angle) * 18;\n    const z = Math.sin(angle) * 18;\n    hourMarkers.push(\n      <group key={i} position={[x, 0.1, z]}>\n        <mesh>\n          <cylinderGeometry args={[0.5, 0.5, 0.2, 16]} />\n          <meshStandardMaterial\n            color=\"#7dd3fc\"\n            emissive=\"#7dd3fc\"\n            emissiveIntensity={systemActive ? 2 : 0.5}\n          />\n        </mesh>\n        <Text\n          position={[0, 0.5, 0]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          fontSize={1.5}\n          color=\"#7dd3fc\"\n          anchorX=\"center\"\n          anchorY=\"middle\"\n        >\n          {i === 0 ? 12 : i}\n        </Text>\n      </group>\n    );\n  }\n\n  return (\n    <group ref={clockRef} position={[0, 0, 0]}>\n      {/* Clock face */}\n      <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, 0, 0]}>\n        <circleGeometry args={[20, 64]} />\n        <meshStandardMaterial\n          color=\"#0f172a\"\n          transparent\n          opacity={0.8}\n          emissive=\"#1e3a8a\"\n          emissiveIntensity={systemActive ? 0.3 : 0}\n        />\n      </mesh>\n\n      {/* Hour markers */}\n      {hourMarkers}\n\n      {/* Center point */}\n      <mesh position={[0, 0.2, 0]}>\n        <sphereGeometry args={[1, 32, 32]} />\n        <meshStandardMaterial\n          color=\"#00ffff\"\n          emissive=\"#00ffff\"\n          emissiveIntensity={systemActive ? 3 : 1}\n        />\n      </mesh>\n\n      {/* Hour hand */}\n      <group ref={hourHandRef} position={[0, 0.15, 0]}>\n        <mesh position={[0, 0, 5]}>\n          <boxGeometry args={[0.3, 0.1, 10]} />\n          <meshStandardMaterial\n            color=\"#7dd3fc\"\n            emissive=\"#7dd3fc\"\n            emissiveIntensity={systemActive ? 1.5 : 0.5}\n          />\n        </mesh>\n      </group>\n\n      {/* Minute hand */}\n      <group ref={minuteHandRef} position={[0, 0.2, 0]}>\n        <mesh position={[0, 0, 8]}>\n          <boxGeometry args={[0.2, 0.1, 16]} />\n          <meshStandardMaterial\n            color=\"#00ffff\"\n            emissive=\"#00ffff\"\n            emissiveIntensity={systemActive ? 2 : 0.5}\n          />\n        </mesh>\n      </group>\n    </group>\n  );\n};\n\nexport default CentralClock;"}, {"path": "/app/frontend/src/components/defense/3d/OrbitalAcetos.jsx", "content": "import React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport AcetoPlanet from './AcetoPlanet';\n\nexport const OrbitalAcetos = ({ systemActive, rotationSpeed }) => {\n  const groupRef = useRef();\n\n  useFrame(() => {\n    if (systemActive && groupRef.current) {\n      groupRef.current.rotation.y += 0.001 * rotationSpeed;\n    }\n  });\n\n  // Create 12 Aceto planets around the clock\n  const acetos = [];\n  for (let i = 0; i < 12; i++) {\n    const angle = (i / 12) * Math.PI * 2;\n    const radius = 30;\n    const x = Math.cos(angle) * radius;\n    const z = Math.sin(angle) * radius;\n    const y = 5;\n\n    acetos.push(\n      <AcetoPlanet\n        key={`orbital-${i}`}\n        position={[x, y, z]}\n        scale={1.5}\n        systemActive={systemActive}\n        index={i}\n      />\n    );\n  }\n\n  return <group ref={groupRef}>{acetos}</group>;\n};\n\nexport default OrbitalAcetos;"}, {"path": "/app/frontend/src/components/defense/3d/SkyAcetos.jsx", "content": "import React, { useRef, useMemo } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport AcetoPlanet from './AcetoPlanet';\n\nexport const SkyAcetos = ({ systemActive, enemyDetected, rotationSpeed }) => {\n  const groupRef = useRef();\n\n  useFrame(({ clock }) => {\n    if (systemActive && groupRef.current) {\n      const time = clock.getElapsedTime();\n      groupRef.current.rotation.y = time * 0.1 * rotationSpeed;\n\n      // When enemy detected, move acetos toward center\n      if (enemyDetected) {\n        const scale = 1 + Math.sin(time * 2) * 0.1;\n        groupRef.current.scale.set(scale, scale, scale);\n      } else {\n        groupRef.current.scale.set(1, 1, 1);\n      }\n    }\n  });\n\n  // Create 3 sets of 84 Acetos (252 total) in sky formation\n  const acetos = useMemo(() => {\n    const result = [];\n    const sets = 3;\n    const acetosPerSet = 84;\n\n    for (let set = 0; set < sets; set++) {\n      const heightOffset = 30 + set * 15;\n      const radiusOffset = 50 + set * 10;\n\n      for (let i = 0; i < acetosPerSet; i++) {\n        const angle = (i / acetosPerSet) * Math.PI * 2;\n        const radius = radiusOffset + Math.random() * 10;\n        const x = Math.cos(angle) * radius;\n        const z = Math.sin(angle) * radius;\n        const y = heightOffset + (Math.random() - 0.5) * 10;\n\n        result.push(\n          <AcetoPlanet\n            key={`sky-${set}-${i}`}\n            position={[x, y, z]}\n            scale={0.5 + Math.random() * 0.3}\n            systemActive={systemActive}\n            index={set * acetosPerSet + i}\n            isSmall\n          />\n        );\n      }\n    }\n\n    return result;\n  }, [systemActive]);\n\n  return <group ref={groupRef}>{acetos}</group>;\n};\n\nexport default SkyAcetos;"}, {"path": "/app/frontend/src/components/defense/3d/AcetoPlanet.jsx", "content": "import React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nexport const AcetoPlanet = ({ position, scale = 1, systemActive, index, isSmall = false }) => {\n  const planetRef = useRef();\n\n  useFrame(({ clock }) => {\n    if (planetRef.current) {\n      // Rotate the planet\n      planetRef.current.rotation.y += 0.01;\n      planetRef.current.rotation.x += 0.005;\n\n      // Add pulsing glow effect when system is active\n      if (systemActive) {\n        const pulse = Math.sin(clock.getElapsedTime() * 2 + index * 0.1) * 0.3 + 0.7;\n        planetRef.current.scale.setScalar(scale * pulse);\n      } else {\n        planetRef.current.scale.setScalar(scale);\n      }\n    }\n  });\n\n  const size = isSmall ? 0.8 : 2;\n\n  return (\n    <mesh ref={planetRef} position={position}>\n      <sphereGeometry args={[size, 32, 32]} />\n      <meshStandardMaterial\n        color=\"#7dd3fc\"\n        emissive=\"#7dd3fc\"\n        emissiveIntensity={systemActive ? 1.5 : 0.3}\n        transparent\n        opacity={0.9}\n        roughness={0.3}\n        metalness={0.7}\n      />\n      {/* Atmosphere glow */}\n      <mesh scale={1.2}>\n        <sphereGeometry args={[size, 32, 32]} />\n        <meshBasicMaterial\n          color=\"#00ffff\"\n          transparent\n          opacity={systemActive ? 0.15 : 0.05}\n          side={2}\n        />\n      </mesh>\n    </mesh>\n  );\n};\n\nexport default AcetoPlanet;"}, {"path": "/app/frontend/src/components/defense/3d/CookingPlate.jsx", "content": "import React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n\nexport const CookingPlate = ({ systemActive, rotationAngle, rotationSpeed, disposalAngle }) => {\n  const plateRef = useRef();\n\n  useFrame(({ clock }) => {\n    if (systemActive && plateRef.current) {\n      const time = clock.getElapsedTime();\n      // Rotate around the center point vertically\n      const angle = time * 0.3 * rotationSpeed + (rotationAngle * Math.PI / 180);\n      const radius = 40;\n      plateRef.current.position.x = Math.cos(angle) * radius;\n      plateRef.current.position.z = Math.sin(angle) * radius;\n      plateRef.current.position.y = 15;\n\n      // Face the center\n      plateRef.current.lookAt(0, 15, 0);\n\n      // Tilt to be perpendicular to ground (90 degrees)\n      plateRef.current.rotation.x = Math.PI / 2;\n    }\n  });\n\n  return (\n    <group ref={plateRef}>\n      {/* Main cooking plate - circular disc */}\n      <mesh>\n        <cylinderGeometry args={[8, 8, 1, 64]} />\n        <meshStandardMaterial\n          color=\"#f59e0b\"\n          emissive=\"#f59e0b\"\n          emissiveIntensity={systemActive ? 1 : 0.2}\n          metalness={0.8}\n          roughness={0.2}\n          transparent\n          opacity={0.8}\n        />\n      </mesh>\n\n      {/* Energy field around the plate */}\n      <mesh scale={1.1}>\n        <cylinderGeometry args={[8.5, 8.5, 1.2, 64]} />\n        <meshBasicMaterial\n          color=\"#fbbf24\"\n          transparent\n          opacity={systemActive ? 0.3 : 0.1}\n          side={THREE.DoubleSide}\n        />\n      </mesh>\n\n      {/* Center glow */}\n      <mesh>\n        <sphereGeometry args={[2, 32, 32]} />\n        <meshStandardMaterial\n          color=\"#fbbf24\"\n          emissive=\"#fbbf24\"\n          emissiveIntensity={systemActive ? 3 : 0.5}\n        />\n      </mesh>\n\n      {/* Outer rings */}\n      {[1, 1.3, 1.6].map((scale, i) => (\n        <mesh key={i} scale={[scale, 1, scale]}>\n          <torusGeometry args={[7, 0.2, 16, 100]} />\n          <meshStandardMaterial\n            color=\"#f59e0b\"\n            emissive=\"#f59e0b\"\n            emissiveIntensity={systemActive ? 2 : 0.3}\n          />\n        </mesh>\n      ))}\n    </group>\n  );\n};\n\nexport default CookingPlate;"}, {"path": "/app/frontend/src/components/defense/3d/Enemy.jsx", "content": "import React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nexport const Enemy = ({ disposalAngle }) => {\n  const enemyRef = useRef();\n  const timeRef = useRef(0);\n\n  useFrame((state, delta) => {\n    if (enemyRef.current) {\n      timeRef.current += delta;\n\n      // Stage 1: Appear and get surrounded (0-1s)\n      if (timeRef.current < 1) {\n        const progress = timeRef.current;\n        enemyRef.current.position.set(\n          Math.sin(progress * Math.PI * 4) * 5,\n          progress * 4,\n          Math.cos(progress * Math.PI * 4) * 5\n        );\n        enemyRef.current.scale.setScalar(progress);\n      }\n      // Stage 2: Lift to 4 meters (1-2s)\n      else if (timeRef.current < 2) {\n        const progress = timeRef.current - 1;\n        enemyRef.current.position.y = 4 + progress * 0;\n        enemyRef.current.rotation.x += delta * 2;\n        enemyRef.current.rotation.y += delta * 3;\n      }\n      // Stage 3: Move toward disposal (2-3s)\n      else {\n        const progress = timeRef.current - 2;\n        const angle = (disposalAngle * Math.PI) / 180;\n        const distance = progress * 50;\n        enemyRef.current.position.set(\n          Math.cos(angle) * distance,\n          4 + progress * 30,\n          Math.sin(angle) * distance\n        );\n        enemyRef.current.rotation.x += delta * 5;\n        enemyRef.current.rotation.y += delta * 5;\n        enemyRef.current.scale.setScalar(1 - progress * 0.5);\n      }\n    }\n  });\n\n  return (\n    <group ref={enemyRef} position={[0, 0, 0]}>\n      <mesh>\n        <octahedronGeometry args={[2, 0]} />\n        <meshStandardMaterial\n          color=\"#ef4444\"\n          emissive=\"#ef4444\"\n          emissiveIntensity={2}\n          wireframe\n        />\n      </mesh>\n      <mesh>\n        <octahedronGeometry args={[2.5, 0]} />\n        <meshBasicMaterial\n          color=\"#ef4444\"\n          transparent\n          opacity={0.2}\n          wireframe\n        />\n      </mesh>\n    </group>\n  );\n};\n\nexport default Enemy;"}]}, "type": "mcp_tool"}
Observation: Successfully wrote 20 files:
- /app/frontend/src/index.css
- /app/frontend/tailwind.config.js
- /app/frontend/src/App.js
- /app/frontend/src/components/ui/sonner.jsx
- /app/frontend/src/components/ui/button.jsx
- /app/frontend/src/components/ui/card.jsx
- /app/frontend/src/components/ui/badge.jsx
- /app/frontend/src/components/ui/slider.jsx
- /app/frontend/src/lib/utils.js
- /app/frontend/src/pages/DefenseSystem.jsx
- /app/frontend/src/components/defense/Header.jsx
- /app/frontend/src/components/defense/SystemStats.jsx
- /app/frontend/src/components/defense/ControlPanel.jsx
- /app/frontend/src/components/defense/Scene3D.jsx
- /app/frontend/src/components/defense/3d/CentralClock.jsx
- /app/frontend/src/components/defense/3d/OrbitalAcetos.jsx
- /app/frontend/src/components/defense/3d/SkyAcetos.jsx
- /app/frontend/src/components/defense/3d/AcetoPlanet.jsx
- /app/frontend/src/components/defense/3d/CookingPlate.jsx
- /app/frontend/src/components/defense/3d/Enemy.jsx
